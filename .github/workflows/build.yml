name: Build and Download Game

on:
  push:
    branches:
      - main
  workflow_dispatch: # still allows manual trigger

jobs:
  build-and-download:
    runs-on: ubuntu-latest # The job itself runs on Linux, weâ€™ll use runners for Windows/macOS builds
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r storage/requirements.txt
          pip install pyinstaller pygame

      - name: Build with PyInstaller
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --onefile --add-data "assets;assets" --add-data "storage;storage" main.py
          else
            pyinstaller --onefile --add-data "assets:assets" --add-data "storage:storage" main.py
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os == 'windows-latest' && 'ScoreQuest_win' || 'ScoreQuest_mac' }}
          path: dist/

  download-artifacts:
    runs-on: ubuntu-latest
    needs: build-and-download

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create build folder
        run: mkdir -p build

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: ScoreQuest_win
          path: build

      - name: Download macOS build
        uses: actions/download-artifact@v4
        with:
          name: ScoreQuest_mac
          path: build

name: Build and Download Game

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r storage/requirements.txt
          pip install pyinstaller pygame

      - name: Build Windows executable
        shell: pwsh
        run: |
          pyinstaller --onefile --windowed --add-data "assets;assets" --add-data "storage;storage" main.py

      - name: Windows optional signing
        shell: pwsh
        env:
          CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
        run: |
          if ($Env:CERT_PASSWORD) {
              Write-Host "Signing executable..."
              $password = $Env:CERT_PASSWORD
              Import-PfxCertificate -FilePath cert.pfx -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String $password -AsPlainText -Force)
              signtool sign /a /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 dist\main.exe
          } else {
              Write-Host "No CERT_PASSWORD secret found; skipping signing."
          }

      - name: Move Windows executable to build folder
        shell: pwsh
        run: |
          if (-not (Test-Path build)) { New-Item -ItemType Directory -Path build }
          move dist\main.exe build\ScoreQuest_win.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: ScoreQuest_win
          path: build/ScoreQuest_win.exe

  build-macos:
    name: Build macOS Executable
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r storage/requirements.txt
          pip install pyinstaller pygame

      - name: Build macOS executable
        run: |
          pyinstaller --onefile --windowed --add-data "assets:assets" --add-data "storage:storage" main.py

      - name: Ad-hoc codesign macOS executable
        run: |
          codesign --deep --force --sign - dist/main
          xattr -cr dist/main

      - name: Move macOS executable to build folder
        run: |
          mkdir -p build
          mv dist/main build/ScoreQuest_mac

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ScoreQuest_mac
          path: build/ScoreQuest_mac

  download-builds:
    name: Download All Builds
    runs-on: ubuntu-latest
    needs:
      - build-windows
      - build-macos
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create build folder
        run: mkdir -p build

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: ScoreQuest_win
          path: build

      - name: Download macOS build
        uses: actions/download-artifact@v4
        with:
          name: ScoreQuest_mac
          path: build
